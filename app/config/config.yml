imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@CoreBundle/Resources/config/services.yml" }
    - { resource: "@AdminBundle/Resources/config/services.yml" }
    - { resource: "@ApiBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: es
    sonata.user.admin.user.class: Application\Sonata\UserBundle\Admin\UserAdmin
    sonata.user.admin.group.class: Application\Sonata\UserBundle\Admin\GroupAdmin

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id: ~
    fragments: ~
    http_method_override: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form:
        resources:
            - 'SonataCoreBundle:Form:datepicker.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        #naming_strategy: doctrine.orm.naming_strategy.underscore
        #auto_mapping: true
        entity_managers:
            default:
                mappings:
                    ApplicationSonataMediaBundle: ~
                    ApplicationSonataUserBundle: ~
                    SonataUserBundle: ~
                    FOSUserBundle: ~
                    CoreBundle: ~
                    SonataMediaBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }
sonata_admin:
    title: " "
    title_logo: bundles/admin/img/logo_title.png
    templates:
        layout:  AdminBundle::standard_layout.html.twig
    security:
        handler: sonata.admin.security.handler.role
sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts: [admin]
fos_user:
    db_driver:      orm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User
    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager
    service:
        user_manager: sonata.user.orm.user_manager
sonata_user:
    manager_type: orm # can be orm or mongodb
assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~
sonata_media:
    providers:
        image:
            resizer: sonata.media.resizer.square
    default_context: default
    db_driver: doctrine_orm
    contexts:
        default:
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}
        logoempresa:
            providers:
                - sonata.media.provider.image
            formats:
                preview:   { width: 50, height: 50, quality: 100}
                small:     { width: 100, quality: 100}
                large:     { width: 600, quality: 100}
        imgproducto:
            providers:
                - sonata.media.provider.image
            formats:
                preview:   { width: 50, height: 50, quality: 100}
                small:     { width: 100, quality: 100}
                large:     { width: 600, quality: 100}
    cdn:
        server:
            path: /uploads/media 
    filesystem:
        local:
            directory:  "%kernel.root_dir%/../web/uploads/media"
            create:     false